plugins {
    alias libs.plugins.android.library
    alias libs.plugins.kotlin.android
    alias libs.plugins.maven
}

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // You can then customize attributes of the publication as shown below.
                groupId='com.github.LTMezzari'
            }
        }
    }
}

android {
    namespace = "mezzari.torres.lucas.easy_debugger"
    compileSdkVersion targetVersion
    defaultConfig {
        minSdkVersion minVersion
        targetSdkVersion targetVersion
        versionCode vCode
        versionName vName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_21
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libs.kotlin.jdk

    //Android
    implementation libs.app.compat

    //Tests
    testImplementation libs.junit
    androidTestImplementation libs.junit.ext
    androidTestImplementation libs.expresso

    //Retrofit
    implementation libs.retrofit
}